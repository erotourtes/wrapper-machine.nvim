==============================================================================

*wrapper-machine.nvim*           For Neovim >= 0.8.0

Author: Max Siryk <erotourtes@gmail.com>
Repository: <https://github.com/erotourtes/wrapper-machine.nvim>
aicense: Apache-2.0


==============================================================================

INTRODUCTION                                      *wrapper-machine-introduction*

|wrapper-machine.nvim| is a plugin that wraps brackets and quotes.


==============================================================================

USAGE                                                    *wrapper-machine-usage*

In order to use the plugin, it is required to call `setup()`.
>
		       require("wrapper-machine").setup()
<
Calling setup with no arguments will use the default settings. You can pass a
table with the settings you want to override. The defaults are the following:
>
			require("wrapper-machine").setup({
				close_symbols = {
					["("] = ")",
					["["] = "]",
					["{"] = "}",
					["<"] = ">",
					['"'] = '"',
					["'"] = "'",
					["`"] = "`",
				},
				keymap = "<leader>",
				create_commands = true,
			})
<

NOTE: Press your keymap and opening bracket or quote to wrap a visual selected
area.

The plugin introduces the following commands:

  *:WrapperMachinEnable* 
  Activates the plugin

>
		     require("wrapper-machine").enable()
<

  *:WrapperMachinDisable* 
  Disables the plugin

>
		     require("wrapper-machine").disable()
<
  
  *:WrapperMachinToggle* 
  Toggles between enabled state and disabled

>
		     require("wrapper-machine").toggle()
<

==============================================================================

CONFIGURATION                                    *wrapper-machineconfiguration*

  keymap ~
    Accepts a key to press in order to activate the plugin. 
    Example: Pressing `"keymap" + "opening bracket"` would wrap visual selected
    area
    Type: `string`
    Default: `"<leader>"`

  close_symbols ~
    Specify on which type of bracket or quotes must work.
    Type: `table`
    Default:  `{ ["("] = ")", ["["] = "]", ["{"] = "}", ["<"] = ">", ['"'] = '"', ["'"] = "'", ["`"] = "`"}`

  create_commands ~
    Specify whether the plugin should create |user-commands|. All the features
    would still be available via lua API functions.
    Type: `boolean`
    Default: `true`

 vim:tw=78:ts=8:noet:ft=help:norl:
